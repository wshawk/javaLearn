
mybatis-plus:
  configuration:
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      capital-mode: false
      field-strategy: NOT_NULL
      id-type: AUTO
  mapper-locations: classpath:/mapper/**.xml
  type-aliases-package: com.hawk.example.shardingsphere_jdbc.entity

server:
  port: 7090

spring:
  shardingsphere:
    datasource:
      names: m1
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/csm?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&allowMultiQueries=true&useAffectedRows=true&autoReconnectForPools=true
        username: gree
        password: gree
        initial-size: 5
        max-active: 30
        max-wait: 30000
        min-idle: 5
        testWhileIdle: true
#      m1-s1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&allowMultiQueries=true&useAffectedRows=true&autoReconnectForPools=true
#        username: gree
#        password: gree
#        initial-size: 5
#        max-active: 30
#        max-wait: 30000
#        min-idle: 5
#        testWhileIdle: true
    sharding:
      default-data-source-name: m1
      tables:
        t_order:
          key-generator: # 指定 t_order 表的主键生成策略为 SNOWFLAKE，order_id 就是 t_order 表的主键
            column: order_id
            type: SNOWFLAKE
          actual-data-nodes: m1.t_order_$->{1..2} # 指定 t_order 表的数据分布情况，配置数据节点
          table-strategy: # 指定 t_order 表的分片策略，分片策略包括分片键和分片算法
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id%2+1} # order_id 值为奇数插入到 t_order_2 表，为偶数插入到 t_order_1 表
    props:
      sql:
        show: true # 打开 sql 输出日志